buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
    }
}

ext {
    supportLibraryVersion = '27.1.1'
}

allprojects {
    repositories {
        jcenter()
        google()
        maven {
            url "https://jitpack.io"
        }
    }
}

configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:${supportLibraryVersion}"
    }
}

tasks.withType(Test) {
    /// increased logging for tests
    testLogging {
        events "passed", "skipped", "failed"
    }
}

// Updates output file names of a given variant to format
// [appName].[variant.versionName].[OC_BUILD_NUMBER]-[variant.name].apk.
//
// OC_BUILD_NUMBER is an environment variable read directly in this method. If undefined, it's not added.
//
// @param variant           Build variant instance which output file name will be updated.
// @param appName           String to use as first part of the new file name. May be undefined, the original
//                          project.archivesBaseName property will be used instead.
// @param callerProject     Caller project.

def setOutputFileName(variant, appName, callerProject) {
    logger.info("Setting new name for output of variant $variant.name")

    def originalFile = variant.outputs[0].outputFile
    def originalName = originalFile.name
    logger.info("$variant.name: originalName is $originalName")

    def newName = ""

    if (appName) {
        newName += appName
    } else {
        newName += callerProject.archivesBaseName
    }

    def versionName = "$variant.mergedFlavor.versionName"
    if (variant.mergedFlavor.manifestPlaceholders.versionName != null) {
        versionName = "$variant.mergedFlavor.manifestPlaceholders.versionName"
    }
    if (variant.buildType.manifestPlaceholders.versionName != null) {
        versionName = "$variant.buildType.manifestPlaceholders.versionName"
    }
    newName += "_$versionName"

    def buildNumber = System.env.OC_BUILD_NUMBER
    if (buildNumber) {
        newName += ".$buildNumber"
    }

    newName += originalName.substring(callerProject.archivesBaseName.length())

    logger.info("$variant.name: newName is $newName")

    variant.outputs.all {
        outputFileName = new File(".", newName)
    }
}
